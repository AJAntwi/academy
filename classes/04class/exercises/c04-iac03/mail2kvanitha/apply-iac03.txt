```
   $ terraform apply --var-file=main.tfvar
   data.aws_availability_zones.az: Refreshing state...
   aws_vpc.devopsacademy-iac: Refreshing state... [id=vpc-07619bd9d2e53308b]
   aws_eip.devopsacademy-iac-eip: Refreshing state... [id=eipalloc-0de09e5204bedb781]
   aws_internet_gateway.devopsacademy-iac-igw: Refreshing state... [id=igw-074993f7b1e87a389]
   aws_route_table.iac-public-rt: Refreshing state... [id=rtb-0639a2e2fa95d954b]
   aws_main_route_table_association.iac-main-rtassoc: Refreshing state... [id=rtbassoc-0d0b10a6935d3b27b]
   
   An execution plan has been generated and is shown below.
   Resource actions are indicated with the following symbols:
     + create
     ~ update in-place
   -/+ destroy and then create replacement
   
   Terraform will perform the following actions:
   
     # aws_internet_gateway.devopsacademy-iac-igw will be updated in-place
     ~ resource "aws_internet_gateway" "devopsacademy-iac-igw" {
           arn      = "arn:aws:ec2:ap-southeast-2:823151257518:internet-gateway/igw-074993f7b1e87a389"
           id       = "igw-074993f7b1e87a389"
           owner_id = "823151257518"
           tags     = {
               "Name" = "devopsacademy-iac-igw"
           }
         ~ vpc_id   = "vpc-07619bd9d2e53308b" -> (known after apply)
       }
   
     # aws_main_route_table_association.iac-main-rtassoc will be updated in-place
     ~ resource "aws_main_route_table_association" "iac-main-rtassoc" {
           id                      = "rtbassoc-0d0b10a6935d3b27b"
           original_route_table_id = "rtb-0a76dbe02ced45c6c"
         ~ route_table_id          = "rtb-0639a2e2fa95d954b" -> (known after apply)
         ~ vpc_id                  = "vpc-07619bd9d2e53308b" -> (known after apply)
       }
   
     # aws_nat_gateway.iac-nat-gateway will be created
     + resource "aws_nat_gateway" "iac-nat-gateway" {
         + allocation_id        = "eipalloc-0de09e5204bedb781"
         + id                   = (known after apply)
         + network_interface_id = (known after apply)
         + private_ip           = (known after apply)
         + public_ip            = (known after apply)
         + subnet_id            = (known after apply)
         + tags                 = {
             + "Name" = "iac-nat-gateway"
           }
       }
   
     # aws_route_table.iac-private-rt will be created
     + resource "aws_route_table" "iac-private-rt" {
         + id               = (known after apply)
         + owner_id         = (known after apply)
         + propagating_vgws = (known after apply)
         + route            = [
             + {
                 + cidr_block                = "0.0.0.0/0"
                 + egress_only_gateway_id    = ""
                 + gateway_id                = (known after apply)
                 + instance_id               = ""
                 + ipv6_cidr_block           = ""
                 + nat_gateway_id            = ""
                 + network_interface_id      = ""
                 + transit_gateway_id        = ""
                 + vpc_peering_connection_id = ""
               },
           ]
         + tags             = {
             + "Name" = "iac-private-rt"
           }
         + vpc_id           = (known after apply)
       }
   
     # aws_route_table.iac-public-rt must be replaced
   -/+ resource "aws_route_table" "iac-public-rt" {
         ~ id               = "rtb-0639a2e2fa95d954b" -> (known after apply)
         ~ owner_id         = "823151257518" -> (known after apply)
         ~ propagating_vgws = [] -> (known after apply)
           route            = [
               {
                   cidr_block                = "0.0.0.0/0"
                   egress_only_gateway_id    = ""
                   gateway_id                = "igw-074993f7b1e87a389"
                   instance_id               = ""
                   ipv6_cidr_block           = ""
                   nat_gateway_id            = ""
                   network_interface_id      = ""
                   transit_gateway_id        = ""
                   vpc_peering_connection_id = ""
               },
           ]
           tags             = {
               "Name" = "iac-public-rt"
           }
         ~ vpc_id           = "vpc-07619bd9d2e53308b" -> (known after apply) # forces replacement
       }
   
     # aws_route_table_association.iac-prv1a-rtassoc will be created
     + resource "aws_route_table_association" "iac-prv1a-rtassoc" {
         + id             = (known after apply)
         + route_table_id = (known after apply)
         + subnet_id      = (known after apply)
       }
   
     # aws_route_table_association.iac-prv1b-rtassoc will be created
     + resource "aws_route_table_association" "iac-prv1b-rtassoc" {
         + id             = (known after apply)
         + route_table_id = (known after apply)
         + subnet_id      = (known after apply)
       }
   
     # aws_route_table_association.iac-pub1a-rtassoc will be created
     + resource "aws_route_table_association" "iac-pub1a-rtassoc" {
         + id             = (known after apply)
         + route_table_id = (known after apply)
         + subnet_id      = (known after apply)
       }
   
     # aws_route_table_association.iac-pub1b-rtassoc will be created
     + resource "aws_route_table_association" "iac-pub1b-rtassoc" {
         + id             = (known after apply)
         + route_table_id = (known after apply)
         + subnet_id      = (known after apply)
       }
   
     # aws_subnet.iac-private-1a will be created
     + resource "aws_subnet" "iac-private-1a" {
         + arn                             = (known after apply)
         + assign_ipv6_address_on_creation = false
         + availability_zone               = "ap-southeast-2a"
         + availability_zone_id            = (known after apply)
         + cidr_block                      = "10.0.21.0/24"
         + id                              = (known after apply)
         + ipv6_cidr_block                 = (known after apply)
         + ipv6_cidr_block_association_id  = (known after apply)
         + map_public_ip_on_launch         = true
         + owner_id                        = (known after apply)
         + tags                            = {
             + "Name" = "private-subnet-1a-iac"
           }
         + vpc_id                          = (known after apply)
       }
   
     # aws_subnet.iac-private-1b will be created
     + resource "aws_subnet" "iac-private-1b" {
         + arn                             = (known after apply)
         + assign_ipv6_address_on_creation = false
         + availability_zone               = "ap-southeast-2b"
         + availability_zone_id            = (known after apply)
         + cidr_block                      = "10.0.22.0/24"
         + id                              = (known after apply)
         + ipv6_cidr_block                 = (known after apply)
         + ipv6_cidr_block_association_id  = (known after apply)
         + map_public_ip_on_launch         = true
         + owner_id                        = (known after apply)
         + tags                            = {
             + "Name" = "private-subnet-1a-iac"
           }
         + vpc_id                          = (known after apply)
       }
   
     # aws_subnet.iac-public-1a will be created
     + resource "aws_subnet" "iac-public-1a" {
         + arn                             = (known after apply)
         + assign_ipv6_address_on_creation = false
         + availability_zone               = "ap-southeast-2a"
         + availability_zone_id            = (known after apply)
         + cidr_block                      = "10.0.19.0/24"
         + id                              = (known after apply)
         + ipv6_cidr_block                 = (known after apply)
         + ipv6_cidr_block_association_id  = (known after apply)
         + map_public_ip_on_launch         = true
         + owner_id                        = (known after apply)
         + tags                            = {
             + "Name" = "iac-public-1a"
           }
         + vpc_id                          = (known after apply)
       }
   
     # aws_subnet.iac-public-1b will be created
     + resource "aws_subnet" "iac-public-1b" {
         + arn                             = (known after apply)
         + assign_ipv6_address_on_creation = false
         + availability_zone               = "ap-southeast-2b"
         + availability_zone_id            = (known after apply)
         + cidr_block                      = "10.0.12.0/24"
         + id                              = (known after apply)
         + ipv6_cidr_block                 = (known after apply)
         + ipv6_cidr_block_association_id  = (known after apply)
         + map_public_ip_on_launch         = true
         + owner_id                        = (known after apply)
         + tags                            = {
             + "Name" = "iac-public-1b"
           }
         + vpc_id                          = (known after apply)
       }
   
     # aws_vpc.devopsacademy-iac must be replaced
   -/+ resource "aws_vpc" "devopsacademy-iac" {
         ~ arn                              = "arn:aws:ec2:ap-southeast-2:823151257518:vpc/vpc-07619bd9d2e53308b" -> (known after apply)
           assign_generated_ipv6_cidr_block = false
         ~ cidr_block                       = "10.0.0.0/16" -> "10.0.0.0/17" # forces replacement
         ~ default_network_acl_id           = "acl-03334594504ac64a0" -> (known after apply)
         ~ default_route_table_id           = "rtb-0639a2e2fa95d954b" -> (known after apply)
         ~ default_security_group_id        = "sg-03b5601f8a26243d2" -> (known after apply)
         ~ dhcp_options_id                  = "dopt-9d2a63fa" -> (known after apply)
         ~ enable_classiclink               = false -> (known after apply)
         ~ enable_classiclink_dns_support   = false -> (known after apply)
           enable_dns_hostnames             = true
           enable_dns_support               = true
         ~ id                               = "vpc-07619bd9d2e53308b" -> (known after apply)
           instance_tenancy                 = "default"
         + ipv6_association_id              = (known after apply)
         + ipv6_cidr_block                  = (known after apply)
         ~ main_route_table_id              = "rtb-0639a2e2fa95d954b" -> (known after apply)
         ~ owner_id                         = "823151257518" -> (known after apply)
           tags                             = {
               "Name" = "devopsacademy-iac"
           }
       }
   
   Plan: 12 to add, 2 to change, 2 to destroy.
   
   Do you want to perform these actions?
     Terraform will perform the actions described above.
     Only 'yes' will be accepted to approve.
   
     Enter a value: yes
   
   aws_route_table.iac-public-rt: Destroying... [id=rtb-0639a2e2fa95d954b]
   
   Error: InvalidParameterValue: cannot disassociate the main route table association rtbassoc-0d0b10a6935d3b27b
   	status code: 400, request id: f1d9eebb-499c-4178-912f-f1c8869d634d
   
```   
   NOTE: TERRAFORM IS UNABLE TO DELETE THE ROUTE TABLE ASSOCIATED AS VPC DEFAULT ROUTE.
   HENCE DELETED THE VPC MANUALLY, WHICH WILL ALSO DELETE ALL THE NETWORK COMPONENTS INCLUDING DEFAULT ROUTE TABLE ASSOCIATED WITH IT.
   
   RERAN THE "TERRAFORM APPLY" COMMAND AND BELOW IS THE OUTPUT.
   
```   
   $ terraform apply --var-file=main.tfvar
   data.aws_availability_zones.az: Refreshing state...
   aws_vpc.devopsacademy-iac: Refreshing state... [id=vpc-07619bd9d2e53308b]
   aws_eip.devopsacademy-iac-eip: Refreshing state... [id=eipalloc-0de09e5204bedb781]
   aws_internet_gateway.devopsacademy-iac-igw: Refreshing state... [id=igw-074993f7b1e87a389]
   aws_route_table.iac-public-rt: Refreshing state... [id=rtb-0639a2e2fa95d954b]
   aws_main_route_table_association.iac-main-rtassoc: Refreshing state... [id=rtbassoc-0d0b10a6935d3b27b]
   
   An execution plan has been generated and is shown below.
   Resource actions are indicated with the following symbols:
     + create
   
   Terraform will perform the following actions:
   
     # aws_internet_gateway.devopsacademy-iac-igw will be created
     + resource "aws_internet_gateway" "devopsacademy-iac-igw" {
         + arn      = (known after apply)
         + id       = (known after apply)
         + owner_id = (known after apply)
         + tags     = {
             + "Name" = "devopsacademy-iac-igw"
           }
         + vpc_id   = (known after apply)
       }
   
     # aws_main_route_table_association.iac-main-rtassoc will be created
     + resource "aws_main_route_table_association" "iac-main-rtassoc" {
         + id                      = (known after apply)
         + original_route_table_id = (known after apply)
         + route_table_id          = (known after apply)
         + vpc_id                  = (known after apply)
       }
   
     # aws_nat_gateway.iac-nat-gateway will be created
     + resource "aws_nat_gateway" "iac-nat-gateway" {
         + allocation_id        = "eipalloc-0de09e5204bedb781"
         + id                   = (known after apply)
         + network_interface_id = (known after apply)
         + private_ip           = (known after apply)
         + public_ip            = (known after apply)
         + subnet_id            = (known after apply)
         + tags                 = {
             + "Name" = "iac-nat-gateway"
           }
       }
   
     # aws_route_table.iac-private-rt will be created
     + resource "aws_route_table" "iac-private-rt" {
         + id               = (known after apply)
         + owner_id         = (known after apply)
         + propagating_vgws = (known after apply)
         + route            = [
             + {
                 + cidr_block                = "0.0.0.0/0"
                 + egress_only_gateway_id    = ""
                 + gateway_id                = (known after apply)
                 + instance_id               = ""
                 + ipv6_cidr_block           = ""
                 + nat_gateway_id            = ""
                 + network_interface_id      = ""
                 + transit_gateway_id        = ""
                 + vpc_peering_connection_id = ""
               },
           ]
         + tags             = {
             + "Name" = "iac-private-rt"
           }
         + vpc_id           = (known after apply)
       }
   
     # aws_route_table.iac-public-rt will be created
     + resource "aws_route_table" "iac-public-rt" {
         + id               = (known after apply)
         + owner_id         = (known after apply)
         + propagating_vgws = (known after apply)
         + route            = [
             + {
                 + cidr_block                = "0.0.0.0/0"
                 + egress_only_gateway_id    = ""
                 + gateway_id                = (known after apply)
                 + instance_id               = ""
                 + ipv6_cidr_block           = ""
                 + nat_gateway_id            = ""
                 + network_interface_id      = ""
                 + transit_gateway_id        = ""
                 + vpc_peering_connection_id = ""
               },
           ]
         + tags             = {
             + "Name" = "iac-public-rt"
           }
         + vpc_id           = (known after apply)
       }
   
     # aws_route_table_association.iac-prv1a-rtassoc will be created
     + resource "aws_route_table_association" "iac-prv1a-rtassoc" {
         + id             = (known after apply)
         + route_table_id = (known after apply)
         + subnet_id      = (known after apply)
       }
   
     # aws_route_table_association.iac-prv1b-rtassoc will be created
     + resource "aws_route_table_association" "iac-prv1b-rtassoc" {
         + id             = (known after apply)
         + route_table_id = (known after apply)
         + subnet_id      = (known after apply)
       }
   
     # aws_route_table_association.iac-pub1a-rtassoc will be created
     + resource "aws_route_table_association" "iac-pub1a-rtassoc" {
         + id             = (known after apply)
         + route_table_id = (known after apply)
         + subnet_id      = (known after apply)
       }
   
     # aws_route_table_association.iac-pub1b-rtassoc will be created
     + resource "aws_route_table_association" "iac-pub1b-rtassoc" {
         + id             = (known after apply)
         + route_table_id = (known after apply)
         + subnet_id      = (known after apply)
       }
   
     # aws_subnet.iac-private-1a will be created
     + resource "aws_subnet" "iac-private-1a" {
         + arn                             = (known after apply)
         + assign_ipv6_address_on_creation = false
         + availability_zone               = "ap-southeast-2a"
         + availability_zone_id            = (known after apply)
         + cidr_block                      = "10.0.21.0/24"
         + id                              = (known after apply)
         + ipv6_cidr_block                 = (known after apply)
         + ipv6_cidr_block_association_id  = (known after apply)
         + map_public_ip_on_launch         = true
         + owner_id                        = (known after apply)
         + tags                            = {
             + "Name" = "private-subnet-1a-iac"
           }
         + vpc_id                          = (known after apply)
       }
   
     # aws_subnet.iac-private-1b will be created
     + resource "aws_subnet" "iac-private-1b" {
         + arn                             = (known after apply)
         + assign_ipv6_address_on_creation = false
         + availability_zone               = "ap-southeast-2b"
         + availability_zone_id            = (known after apply)
         + cidr_block                      = "10.0.22.0/24"
         + id                              = (known after apply)
         + ipv6_cidr_block                 = (known after apply)
         + ipv6_cidr_block_association_id  = (known after apply)
         + map_public_ip_on_launch         = true
         + owner_id                        = (known after apply)
         + tags                            = {
             + "Name" = "private-subnet-1a-iac"
           }
         + vpc_id                          = (known after apply)
       }
   
     # aws_subnet.iac-public-1a will be created
     + resource "aws_subnet" "iac-public-1a" {
         + arn                             = (known after apply)
         + assign_ipv6_address_on_creation = false
         + availability_zone               = "ap-southeast-2a"
         + availability_zone_id            = (known after apply)
         + cidr_block                      = "10.0.19.0/24"
         + id                              = (known after apply)
         + ipv6_cidr_block                 = (known after apply)
         + ipv6_cidr_block_association_id  = (known after apply)
         + map_public_ip_on_launch         = true
         + owner_id                        = (known after apply)
         + tags                            = {
             + "Name" = "iac-public-1a"
           }
         + vpc_id                          = (known after apply)
       }
   
     # aws_subnet.iac-public-1b will be created
     + resource "aws_subnet" "iac-public-1b" {
         + arn                             = (known after apply)
         + assign_ipv6_address_on_creation = false
         + availability_zone               = "ap-southeast-2b"
         + availability_zone_id            = (known after apply)
         + cidr_block                      = "10.0.12.0/24"
         + id                              = (known after apply)
         + ipv6_cidr_block                 = (known after apply)
         + ipv6_cidr_block_association_id  = (known after apply)
         + map_public_ip_on_launch         = true
         + owner_id                        = (known after apply)
         + tags                            = {
             + "Name" = "iac-public-1b"
           }
         + vpc_id                          = (known after apply)
       }
   
     # aws_vpc.devopsacademy-iac will be created
     + resource "aws_vpc" "devopsacademy-iac" {
         + arn                              = (known after apply)
         + assign_generated_ipv6_cidr_block = false
         + cidr_block                       = "10.0.0.0/17"
         + default_network_acl_id           = (known after apply)
         + default_route_table_id           = (known after apply)
         + default_security_group_id        = (known after apply)
         + dhcp_options_id                  = (known after apply)
         + enable_classiclink               = (known after apply)
         + enable_classiclink_dns_support   = (known after apply)
         + enable_dns_hostnames             = true
         + enable_dns_support               = true
         + id                               = (known after apply)
         + instance_tenancy                 = "default"
         + ipv6_association_id              = (known after apply)
         + ipv6_cidr_block                  = (known after apply)
         + main_route_table_id              = (known after apply)
         + owner_id                         = (known after apply)
         + tags                             = {
             + "Name" = "devopsacademy-iac"
           }
       }
   
   Plan: 14 to add, 0 to change, 0 to destroy.
   
   Do you want to perform these actions?
     Terraform will perform the actions described above.
     Only 'yes' will be accepted to approve.
   
     Enter a value: yes
   
   aws_vpc.devopsacademy-iac: Creating...
   aws_vpc.devopsacademy-iac: Creation complete after 3s [id=vpc-03fe2b114f5ebda08]
   aws_internet_gateway.devopsacademy-iac-igw: Creating...
   aws_subnet.iac-public-1b: Creating...
   aws_subnet.iac-private-1a: Creating...
   aws_subnet.iac-private-1b: Creating...
   aws_subnet.iac-public-1a: Creating...
   aws_internet_gateway.devopsacademy-iac-igw: Creation complete after 1s [id=igw-0662a8d8686cb5d7d]
   aws_route_table.iac-public-rt: Creating...
   aws_subnet.iac-private-1a: Creation complete after 1s [id=subnet-03d1eb9767a13110b]
   aws_subnet.iac-public-1b: Creation complete after 1s [id=subnet-03bedda61560af137]
   aws_subnet.iac-private-1b: Creation complete after 1s [id=subnet-0ae0244c1128c3da1]
   aws_subnet.iac-public-1a: Creation complete after 1s [id=subnet-02b094aad24b69e01]
   aws_nat_gateway.iac-nat-gateway: Creating...
   aws_route_table.iac-public-rt: Creation complete after 1s [id=rtb-03e61b2fb21bc1522]
   aws_main_route_table_association.iac-main-rtassoc: Creating...
   aws_route_table_association.iac-pub1b-rtassoc: Creating...
   aws_route_table_association.iac-pub1a-rtassoc: Creating...
   aws_route_table_association.iac-pub1a-rtassoc: Creation complete after 0s [id=rtbassoc-01523c788d16cc4c4]
   aws_route_table_association.iac-pub1b-rtassoc: Creation complete after 0s [id=rtbassoc-0003e42d8efa087b7]
   aws_main_route_table_association.iac-main-rtassoc: Creation complete after 1s [id=rtbassoc-0d09b22eb9f994130]
   aws_nat_gateway.iac-nat-gateway: Still creating... [10s elapsed]
   aws_nat_gateway.iac-nat-gateway: Still creating... [20s elapsed]
   aws_nat_gateway.iac-nat-gateway: Still creating... [30s elapsed]
   aws_nat_gateway.iac-nat-gateway: Still creating... [40s elapsed]
   aws_nat_gateway.iac-nat-gateway: Still creating... [50s elapsed]
   aws_nat_gateway.iac-nat-gateway: Still creating... [1m0s elapsed]
   aws_nat_gateway.iac-nat-gateway: Still creating... [1m10s elapsed]
   aws_nat_gateway.iac-nat-gateway: Still creating... [1m20s elapsed]
   aws_nat_gateway.iac-nat-gateway: Still creating... [1m30s elapsed]
   aws_nat_gateway.iac-nat-gateway: Still creating... [1m40s elapsed]
   aws_nat_gateway.iac-nat-gateway: Still creating... [1m50s elapsed]
   aws_nat_gateway.iac-nat-gateway: Creation complete after 1m58s [id=nat-01f2664e73a95e28f]
   aws_route_table.iac-private-rt: Creating...
   aws_route_table.iac-private-rt: Creation complete after 1s [id=rtb-0a5d990e49a1fa6a4]
   aws_route_table_association.iac-prv1a-rtassoc: Creating...
   aws_route_table_association.iac-prv1b-rtassoc: Creating...
   aws_route_table_association.iac-prv1b-rtassoc: Creation complete after 0s [id=rtbassoc-04d573ee84153f9fc]
   aws_route_table_association.iac-prv1a-rtassoc: Creation complete after 0s [id=rtbassoc-0ee0dc8af6cb5a30b]
   
   Apply complete! Resources: 14 added, 0 changed, 0 destroyed.
   
   The state of your infrastructure has been saved to the path
   below. This state is required to modify and destroy your
   infrastructure, so keep it safe. To inspect the complete state
   use the `terraform show` command.
   
   State path: /Users/vanithak/class04/terraform.tfstate
```   
   Outputs:
```   
   aws_internet_gateway = igw-0662a8d8686cb5d7d
   aws_nat_gateway = nat-01f2664e73a95e28f
   aws_vpc = 10.0.0.0/17
   private-subnet-1a-cidr = 10.0.21.0/24
   private-subnet-1a-name = private-subnet-1a-iac
   private-subnet-1b-cidr = 10.0.22.0/24
   private-subnet-1b-name = private-subnet-1a-iac
   public-subnet-1a-cidr = 10.0.19.0/24
   public-subnet-1a-name = iac-public-1a
   public-subnet-1b-cidr = 10.0.12.0/24
   public-subnet-1b-name = iac-public-1b
   
```   
