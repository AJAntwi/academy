
Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # aws_eip.ngw-eip will be created
  + resource "aws_eip" "ngw-eip" {
      + allocation_id        = (known after apply)
      + association_id       = (known after apply)
      + carrier_ip           = (known after apply)
      + customer_owned_ip    = (known after apply)
      + domain               = (known after apply)
      + id                   = (known after apply)
      + instance             = (known after apply)
      + network_border_group = (known after apply)
      + network_interface    = (known after apply)
      + private_dns          = (known after apply)
      + private_ip           = (known after apply)
      + public_dns           = (known after apply)
      + public_ip            = (known after apply)
      + public_ipv4_pool     = (known after apply)
      + tags                 = {
          + "Exercise" = "c04-iac02"
          + "Name"     = "EIP for the NAT gateway"
          + "Student"  = "Vishaal Pal"
        }
      + tags_all             = {
          + "Exercise" = "c04-iac02"
          + "Name"     = "EIP for the NAT gateway"
          + "Student"  = "Vishaal Pal"
        }
      + vpc                  = true
    }

  # aws_internet_gateway.igw will be created
  + resource "aws_internet_gateway" "igw" {
      + arn      = (known after apply)
      + id       = (known after apply)
      + owner_id = (known after apply)
      + tags     = (known after apply)
      + tags_all = (known after apply)
      + vpc_id   = (known after apply)
    }

  # aws_nat_gateway.ngw will be created
  + resource "aws_nat_gateway" "ngw" {
      + allocation_id        = (known after apply)
      + connectivity_type    = "public"
      + id                   = (known after apply)
      + network_interface_id = (known after apply)
      + private_ip           = (known after apply)
      + public_ip            = (known after apply)
      + subnet_id            = (known after apply)
      + tags                 = (known after apply)
      + tags_all             = (known after apply)
    }

  # aws_route_table.route_table_igw will be created
  + resource "aws_route_table" "route_table_igw" {
      + arn              = (known after apply)
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = [
          + {
              + carrier_gateway_id         = ""
              + cidr_block                 = "0.0.0.0/0"
              + destination_prefix_list_id = ""
              + egress_only_gateway_id     = ""
              + gateway_id                 = (known after apply)
              + instance_id                = ""
              + ipv6_cidr_block            = ""
              + local_gateway_id           = ""
              + nat_gateway_id             = ""
              + network_interface_id       = ""
              + transit_gateway_id         = ""
              + vpc_endpoint_id            = ""
              + vpc_peering_connection_id  = ""
            },
        ]
      + tags             = {
          + "Exercise" = "c04-iac02"
          + "Name"     = "Route table for the igw"
          + "Student"  = "Vishaal Pal"
        }
      + tags_all         = {
          + "Exercise" = "c04-iac02"
          + "Name"     = "Route table for the igw"
          + "Student"  = "Vishaal Pal"
        }
      + vpc_id           = (known after apply)
    }

  # aws_route_table.route_table_ngw will be created
  + resource "aws_route_table" "route_table_ngw" {
      + arn              = (known after apply)
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = [
          + {
              + carrier_gateway_id         = ""
              + cidr_block                 = "0.0.0.0/0"
              + destination_prefix_list_id = ""
              + egress_only_gateway_id     = ""
              + gateway_id                 = (known after apply)
              + instance_id                = ""
              + ipv6_cidr_block            = ""
              + local_gateway_id           = ""
              + nat_gateway_id             = ""
              + network_interface_id       = ""
              + transit_gateway_id         = ""
              + vpc_endpoint_id            = ""
              + vpc_peering_connection_id  = ""
            },
        ]
      + tags             = {
          + "Exercise" = "c04-iac02"
          + "Name"     = "Route table for the ngw"
          + "Student"  = "Vishaal Pal"
        }
      + tags_all         = {
          + "Exercise" = "c04-iac02"
          + "Name"     = "Route table for the ngw"
          + "Student"  = "Vishaal Pal"
        }
      + vpc_id           = (known after apply)
    }

  # aws_route_table_association.private_route_assoc_private_subnet04 will be created
  + resource "aws_route_table_association" "private_route_assoc_private_subnet04" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # aws_route_table_association.private_route_assoc_private_subnet_03 will be created
  + resource "aws_route_table_association" "private_route_assoc_private_subnet_03" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # aws_route_table_association.public_route_assoc_public_subnet_01 will be created
  + resource "aws_route_table_association" "public_route_assoc_public_subnet_01" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # aws_route_table_association.public_route_assoc_public_subnet_02 will be created
  + resource "aws_route_table_association" "public_route_assoc_public_subnet_02" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # aws_subnet.subnets["subnet_01"] will be created
  + resource "aws_subnet" "subnets" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "ap-southeast-2a"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.1.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Exercise" = "c04-iac02"
          + "Name"     = "public_subnet_01"
          + "Student"  = "Vishaal Pal"
        }
      + tags_all                                       = {
          + "Exercise" = "c04-iac02"
          + "Name"     = "public_subnet_01"
          + "Student"  = "Vishaal Pal"
        }
      + vpc_id                                         = (known after apply)
    }

  # aws_subnet.subnets["subnet_02"] will be created
  + resource "aws_subnet" "subnets" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "ap-southeast-2b"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.2.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Exercise" = "c04-iac02"
          + "Name"     = "public_subnet_02"
          + "Student"  = "Vishaal Pal"
        }
      + tags_all                                       = {
          + "Exercise" = "c04-iac02"
          + "Name"     = "public_subnet_02"
          + "Student"  = "Vishaal Pal"
        }
      + vpc_id                                         = (known after apply)
    }

  # aws_subnet.subnets["subnet_03"] will be created
  + resource "aws_subnet" "subnets" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "ap-southeast-2a"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.3.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Exercise" = "c04-iac02"
          + "Name"     = "private_subnet_01"
          + "Student"  = "Vishaal Pal"
        }
      + tags_all                                       = {
          + "Exercise" = "c04-iac02"
          + "Name"     = "private_subnet_01"
          + "Student"  = "Vishaal Pal"
        }
      + vpc_id                                         = (known after apply)
    }

  # aws_subnet.subnets["subnet_04"] will be created
  + resource "aws_subnet" "subnets" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "ap-southeast-2b"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.0.4.0/24"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Exercise" = "c04-iac02"
          + "Name"     = "private_subnet_02"
          + "Student"  = "Vishaal Pal"
        }
      + tags_all                                       = {
          + "Exercise" = "c04-iac02"
          + "Name"     = "private_subnet_02"
          + "Student"  = "Vishaal Pal"
        }
      + vpc_id                                         = (known after apply)
    }

  # aws_vpc.vpc will be created
  + resource "aws_vpc" "vpc" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.0.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_classiclink                   = (known after apply)
      + enable_classiclink_dns_support       = (known after apply)
      + enable_dns_hostnames                 = (known after apply)
      + enable_dns_support                   = true
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags                                 = {
          + "Exercise" = "c04-iac02"
          + "Name"     = "devopsacademy-iac"
          + "Student"  = "Vishaal Pal"
        }
      + tags_all                             = {
          + "Exercise" = "c04-iac02"
          + "Name"     = "devopsacademy-iac"
          + "Student"  = "Vishaal Pal"
        }
    }

Plan: 14 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + subnet_cidrs = {
      + subnet_01 = "10.0.1.0/24"
      + subnet_02 = "10.0.2.0/24"
      + subnet_03 = "10.0.3.0/24"
      + subnet_04 = "10.0.4.0/24"
    }
  + subnet_ids   = {
      + subnet_01 = (known after apply)
      + subnet_02 = (known after apply)
      + subnet_03 = (known after apply)
      + subnet_04 = (known after apply)
    }
  + subnet_names = {
      + subnet_01 = "public_subnet_01"
      + subnet_02 = "public_subnet_02"
      + subnet_03 = "private_subnet_01"
      + subnet_04 = "private_subnet_02"
    }
  + vpc_id       = "10.0.0.0/16"

─────────────────────────────────────────────────────────────────────────────

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
