  $ terraform plan --var-file=main.tfvar
  Refreshing Terraform state in-memory prior to plan...
  The refreshed state will be used to calculate this plan, but will not be
  persisted to local or remote state storage.
  
  data.aws_availability_zones.az: Refreshing state...
  
  ------------------------------------------------------------------------
  
  An execution plan has been generated and is shown below.
  Resource actions are indicated with the following symbols:
    + create
  
  Terraform will perform the following actions:
  
    # aws_eip.devopsacademy-iac-eip will be created
    + resource "aws_eip" "devopsacademy-iac-eip" {
        + allocation_id     = (known after apply)
        + association_id    = (known after apply)
        + customer_owned_ip = (known after apply)
        + domain            = (known after apply)
        + id                = (known after apply)
        + instance          = (known after apply)
        + network_interface = (known after apply)
        + private_dns       = (known after apply)
        + private_ip        = (known after apply)
        + public_dns        = (known after apply)
        + public_ip         = (known after apply)
        + public_ipv4_pool  = (known after apply)
        + vpc               = true
      }
  
    # aws_internet_gateway.devopsacademy-iac-igw will be created
    + resource "aws_internet_gateway" "devopsacademy-iac-igw" {
        + arn      = (known after apply)
        + id       = (known after apply)
        + owner_id = (known after apply)
        + tags     = {
            + "Name" = "devopsacademy-iac-igw"
          }
        + vpc_id   = (known after apply)
      }
  
    # aws_main_route_table_association.iac-main-rtassoc will be created
    + resource "aws_main_route_table_association" "iac-main-rtassoc" {
        + id                      = (known after apply)
        + original_route_table_id = (known after apply)
        + route_table_id          = (known after apply)
        + vpc_id                  = (known after apply)
      }
  
    # aws_nat_gateway.iac-nat-gateway will be created
    + resource "aws_nat_gateway" "iac-nat-gateway" {
        + allocation_id        = (known after apply)
        + id                   = (known after apply)
        + network_interface_id = (known after apply)
        + private_ip           = (known after apply)
        + public_ip            = (known after apply)
        + subnet_id            = (known after apply)
        + tags                 = {
            + "Name" = "iac-nat-gateway"
          }
      }
  
    # aws_route_table.iac-private-rt will be created
    + resource "aws_route_table" "iac-private-rt" {
        + id               = (known after apply)
        + owner_id         = (known after apply)
        + propagating_vgws = (known after apply)
        + route            = [
            + {
                + cidr_block                = "0.0.0.0/0"
                + egress_only_gateway_id    = ""
                + gateway_id                = (known after apply)
                + instance_id               = ""
                + ipv6_cidr_block           = ""
                + nat_gateway_id            = ""
                + network_interface_id      = ""
                + transit_gateway_id        = ""
                + vpc_peering_connection_id = ""
              },
          ]
        + tags             = {
            + "Name" = "iac-private-rt"
          }
        + vpc_id           = (known after apply)
      }
  
    # aws_route_table.iac-public-rt will be created
    + resource "aws_route_table" "iac-public-rt" {
        + id               = (known after apply)
        + owner_id         = (known after apply)
        + propagating_vgws = (known after apply)
        + route            = [
            + {
                + cidr_block                = "0.0.0.0/0"
                + egress_only_gateway_id    = ""
                + gateway_id                = (known after apply)
                + instance_id               = ""
                + ipv6_cidr_block           = ""
                + nat_gateway_id            = ""
                + network_interface_id      = ""
                + transit_gateway_id        = ""
                + vpc_peering_connection_id = ""
              },
          ]
        + tags             = {
            + "Name" = "iac-public-rt"
          }
        + vpc_id           = (known after apply)
      }
  
    # aws_route_table_association.iac-prv1a-rtassoc will be created
    + resource "aws_route_table_association" "iac-prv1a-rtassoc" {
        + id             = (known after apply)
        + route_table_id = (known after apply)
        + subnet_id      = (known after apply)
      }
  
    # aws_route_table_association.iac-prv1b-rtassoc will be created
    + resource "aws_route_table_association" "iac-prv1b-rtassoc" {
        + id             = (known after apply)
        + route_table_id = (known after apply)
        + subnet_id      = (known after apply)
      }
  
    # aws_route_table_association.iac-pub1a-rtassoc will be created
    + resource "aws_route_table_association" "iac-pub1a-rtassoc" {
        + id             = (known after apply)
        + route_table_id = (known after apply)
        + subnet_id      = (known after apply)
      }
  
    # aws_route_table_association.iac-pub1b-rtassoc will be created
    + resource "aws_route_table_association" "iac-pub1b-rtassoc" {
        + id             = (known after apply)
        + route_table_id = (known after apply)
        + subnet_id      = (known after apply)
      }
  
    # aws_subnet.iac-private-1a will be created
    + resource "aws_subnet" "iac-private-1a" {
        + arn                             = (known after apply)
        + assign_ipv6_address_on_creation = false
        + availability_zone               = "ap-southeast-2a"
        + availability_zone_id            = (known after apply)
        + cidr_block                      = "10.0.201.0/24"
        + id                              = (known after apply)
        + ipv6_cidr_block                 = (known after apply)
        + ipv6_cidr_block_association_id  = (known after apply)
        + map_public_ip_on_launch         = true
        + owner_id                        = (known after apply)
        + tags                            = {
            + "Name" = "iac-private-1a"
          }
        + vpc_id                          = (known after apply)
      }
  
    # aws_subnet.iac-private-1b will be created
    + resource "aws_subnet" "iac-private-1b" {
        + arn                             = (known after apply)
        + assign_ipv6_address_on_creation = false
        + availability_zone               = "ap-southeast-2b"
        + availability_zone_id            = (known after apply)
        + cidr_block                      = "10.0.202.0/24"
        + id                              = (known after apply)
        + ipv6_cidr_block                 = (known after apply)
        + ipv6_cidr_block_association_id  = (known after apply)
        + map_public_ip_on_launch         = true
        + owner_id                        = (known after apply)
        + tags                            = {
            + "Name" = "iac-private-1b"
          }
        + vpc_id                          = (known after apply)
      }
  
    # aws_subnet.iac-public-1a will be created
    + resource "aws_subnet" "iac-public-1a" {
        + arn                             = (known after apply)
        + assign_ipv6_address_on_creation = false
        + availability_zone               = "ap-southeast-2a"
        + availability_zone_id            = (known after apply)
        + cidr_block                      = "10.0.101.0/24"
        + id                              = (known after apply)
        + ipv6_cidr_block                 = (known after apply)
        + ipv6_cidr_block_association_id  = (known after apply)
        + map_public_ip_on_launch         = true
        + owner_id                        = (known after apply)
        + tags                            = {
            + "Name" = "iac-public-1a"
          }
        + vpc_id                          = (known after apply)
      }
  
    # aws_subnet.iac-public-1b will be created
    + resource "aws_subnet" "iac-public-1b" {
        + arn                             = (known after apply)
        + assign_ipv6_address_on_creation = false
        + availability_zone               = "ap-southeast-2b"
        + availability_zone_id            = (known after apply)
        + cidr_block                      = "10.0.102.0/24"
        + id                              = (known after apply)
        + ipv6_cidr_block                 = (known after apply)
        + ipv6_cidr_block_association_id  = (known after apply)
        + map_public_ip_on_launch         = true
        + owner_id                        = (known after apply)
        + tags                            = {
            + "Name" = "iac-public-1b"
          }
        + vpc_id                          = (known after apply)
      }
  
    # aws_vpc.devopsacademy-iac will be created
    + resource "aws_vpc" "devopsacademy-iac" {
        + arn                              = (known after apply)
        + assign_generated_ipv6_cidr_block = false
        + cidr_block                       = "10.0.0.0/16"
        + default_network_acl_id           = (known after apply)
        + default_route_table_id           = (known after apply)
        + default_security_group_id        = (known after apply)
        + dhcp_options_id                  = (known after apply)
        + enable_classiclink               = (known after apply)
        + enable_classiclink_dns_support   = (known after apply)
        + enable_dns_hostnames             = true
        + enable_dns_support               = true
        + id                               = (known after apply)
        + instance_tenancy                 = "default"
        + ipv6_association_id              = (known after apply)
        + ipv6_cidr_block                  = (known after apply)
        + main_route_table_id              = (known after apply)
        + owner_id                         = (known after apply)
        + tags                             = {
            + "Name" = "devopsacademy-iac"
          }
      }
  
  Plan: 15 to add, 0 to change, 0 to destroy.
  
  ------------------------------------------------------------------------
  
  Note: You didn't specify an "-out" parameter to save this plan, so Terraform
  can't guarantee that exactly these actions will be performed if
  "terraform apply" is subsequently run.
  
  
